# Telegraf Configuration
#
# Copyright 2018 Blockchain Technology Partners Limited

# Global tags can be specified here in key="value" format.
[global_tags]
  network = "$NETWORK"

# Configuration for telegraf agent
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = false
  quiet = false
  logfile = ""
  hostname = ""
  omit_hostname = false

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# Configuration for influxdb server to send metrics to
[[outputs.influxdb]]
  urls = ["http://influxdb.$NETWORK:8086"] # required
  database = "metrics" # required
  retention_policy = ""
  write_consistency = "any"
  timeout = "5s"
  # username = "telegraf"
  # password = "metricsmetricsmetricsmetrics"
  # user_agent = "telegraf"
  # udp_payload = 512
  # ssl_ca = "/etc/telegraf/ca.pem"
  # ssl_cert = "/etc/telegraf/cert.pem"
  # ssl_key = "/etc/telegraf/key.pem"
  # insecure_skip_verify = false

# [[outputs.file]]
#   files = ["stdout", "/tmp/metrics.out"]
#   data_format = "influx"

###############################################################################
#                            PROCESSOR PLUGINS                                #
###############################################################################

# # Print all metrics that pass through this filter.
# [[processors.printer]]

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

# Read metrics about docker containers
[[inputs.docker]]
  endpoint = "$DOCKER_HOST"
  container_names = []
  container_name_include = []
  container_name_exclude = []
  timeout = "5s"
  perdevice = true
  total = false
  docker_label_include = []
  docker_label_exclude = []
  tag_env = ["JAVA_HOME", "HEAP_SIZE"]
  # ssl_ca = "/etc/telegraf/ca.pem"
  # ssl_cert = "/etc/telegraf/cert.pem"
  # ssl_key = "/etc/telegraf/key.pem"
  # insecure_skip_verify = false

# Read metrics about cpu usage
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = true

# Read metrics about disk usage by mount point
[[inputs.disk]]
  # mount_points = ["/"]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs"]

# Read metrics about disk IO by device
[[inputs.diskio]]
  # devices = ["sda", "sdb"]
  # skip_serial_number = false
  # device_tags = ["ID_FS_TYPE", "ID_FS_USAGE"]
  # name_templates = ["$ID_FS_LABEL","$DM_VG_NAME/$DM_LV_NAME"]

# Get kernel statistics from /proc/stat
[[inputs.kernel]]

# Read metrics about memory usage
[[inputs.mem]]

# Get the number of processes and group them by status
[[inputs.processes]]

# Read metrics about swap memory usage
[[inputs.swap]]

# Read metrics about system load & uptime
[[inputs.system]]

# # Collect statistics about itself
# [[inputs.internal]]
#   # collect_memstats = true

# # Read metrics about network interface usage
[[inputs.net]]
  # interfaces = ["eth0"]

# # Sysstat metrics collector
# [[inputs.sysstat]]
#   sadc_path = "/usr/lib/sysstat/sadc" # required
#   # sadf_path = "/usr/bin/sadf"
#   # activities = ["DISK"]
#   # group = true
#   [inputs.sysstat.options]
#     -C = "cpu"
#     -B = "paging"
#     -b = "io"
#     -d = "disk"             # requires DISK activity
#     "-n ALL" = "network"
#     "-P ALL" = "per_cpu"
#     -q = "queue"
#     -R = "mem"
#     -r = "mem_util"
#     -S = "swap_util"
#     -u = "cpu_util"
#     -v = "inode"
#     -W = "swap"
#     -w = "task"
#   #  -H = "hugepages"        # only available for newer linux distributions
#   #  "-I ALL" = "interrupts" # requires INT activity
#   # [[inputs.sysstat.device_tags.sda]]
#   #  vg = "rootvg"
