brooklyn.catalog:
  version: "0.3.0-SNAPSHOT" # BROOKLYN_HYPERLEDGER_SAWTOOTH_VERSION
  publish:
    description: |
      Entities for Hyperledger Sawtooth.
    license_code: APACHE-2.0
    icon_url: "classpath://io.brooklyn.hyperledger.sawtooth:icon/sawtooth.png"

  items:
    - id: sawtooth-cluster-application
      description: |
        A Hyperledger Sawtooth Cluster.
      itemType: entity
      iconUrl: "classpath://io.brooklyn.hyperledger.sawtooth:icon/sawtooth.png"
      item:
        type: org.apache.brooklyn.entity.stock.BasicApplication
        name: "sawtooth-cluster-application"

        brooklyn.parameters:
          - name: sawtooth.size
            description: "Cluster Size"
            type: integer
            default: 2
            constraints:
              - required
          - name: sawtooth.network
            description: "Network Name"
            type: string
            default: "sawtooth"
          - name: sawtooth.network.cidr
            description: "Network CIDR"
            type: string
            default: "10.0.0.0/24"
          - name: sawtooth.cluster.name
            description: "Cluster Name"
            type: string
            default: "sawtooth"

        brooklyn.children:
          - type: etcd-node
            name: "etcd-node"
            id: etcd-node
          - type: sawtooth-server-node
            name: "sawtooth-server-node"
            id: sawtooth-server-node
            brooklyn.config:
              cluster.endpoint:
                $brooklyn:sibling("etcd-node").attributeWhenReady("etcd.authority")
          - type: sawtooth-validator-cluster
            name: "sawtooth-validator-cluster"
            id: sawtooth-validator-cluster
            brooklyn.config:
              cluster.endpoint:
                $brooklyn:sibling("etcd-node").attributeWhenReady("etcd.authority")
              launch.latch:
                $brooklyn:ancestor("sawtooth-validator-cluster").sibling("sawtooth-server-node").attributeWhenReady("service.isUp")
              sawtooth.seed.network: $brooklyn:config("sawtooth.network")
              sawtooth.seed.validator:
                $brooklyn:formatString:
                  - "validator.%s"
                  - $brooklyn:config("sawtooth.network")

        brooklyn.enrichers:
          - type: org.apache.brooklyn.enricher.stock.Propagator
            brooklyn.config:
              uniqueTag: rest-api-main-uri-propagator
              producer: $brooklyn:component("sawtooth-server-node")
              sensorMapping:
                $brooklyn:sensor("sawtooth.rest-api.uri"): $brooklyn:sensor("main.uri")

    - id: sawtooth-validator-cluster
      description: |
        A Hyperledger Sawtooth Cluster of Validators.
      itemType: entity
      item:
        type: cluster
        name: "sawtooth-validator-cluster"

        brooklyn.config:
          cluster.initial.size: $brooklyn:config("sawtooth.size")
          dynamiccluster.memberspec:
            $brooklyn:entitySpec:
              type: sawtooth-validator-node
              name: "sawtooth-validator-node"

    - id: sawtooth-server-node
      description: |
        A Hyperledger Sawtooth Server.
      itemType: entity
      iconUrl: "classpath://io.brooklyn.hyperledger.sawtooth:icon/sawtooth.png"
      item:
        type: sawtooth-docker-engine
        name: "sawtooth-server-node"

        brooklyn.config:
          sawtooth.node: "validator"
          shell.env:
            NETWORK: $brooklyn:config("sawtooth.network")
            SUBNET: $brooklyn:config("sawtooth.network.cidr")
          post.launch.command: |
            echo "[SAW] Setup {NETWORK} overlay network (${SUBNET})"
            docker network ls | grep "overlay.*${NETWORK}" ||
              docker network create \
                  --driver=overlay \
                  --subnet="${SUBNET}" \
                  "${NETWORK}"

        brooklyn.children:
          - type: openvpn-server
            name: "openvpn-server"
            id: openvpn-server
          - type: influxdb
            name: "influxdb"
            id: influxdb
          - type: grafana
            name: "grafana"
            id: grafana
            brooklyn.config:
              launch.latch: $brooklyn:sibling("influxdb").attributeWhenReady("service.isUp")
          - type: telegraf
            name: "telegraf"
            id: telegraf
            brooklyn.config:
              launch.latch: $brooklyn:sibling("grafana").attributeWhenReady("service.isUp")
          - type: sawtooth-rest-api
            name: "sawtooth-rest-api"
            id: sawtooth-rest-api
            brooklyn.config:
              launch.latch: $brooklyn:sibling("grafana").attributeWhenReady("service.isUp")
          - type: sawtooth-validator-main
            name: "sawtooth-validator"
            id: sawtooth-validator
            brooklyn.config:
              launch.latch: $brooklyn:sibling("grafana").attributeWhenReady("service.isUp")
          - type: sawtooth-settings-tp
            name: "sawtooth-settings-tp"
            id: sawtooth-settings-tp
            brooklyn.config:
              launch.latch: $brooklyn:sibling("sawtooth-validator").attributeWhenReady("service.isUp")
          - type: sawtooth-identity-tp
            name: "sawtooth-identity-tp"
            id: sawtooth-identity-tp
            brooklyn.config:
              launch.latch: $brooklyn:sibling("sawtooth-validator").attributeWhenReady("service.isUp")
          - type: sawtooth-smallbank-tp
            name: "sawtooth-smallbank-tp"
            id: sawtooth-smallbank-tp
            brooklyn.config:
              launch.latch: $brooklyn:sibling("sawtooth-validator").attributeWhenReady("service.isUp")

        brooklyn.initializers:
          - type: org.apache.brooklyn.core.sensor.StaticSensor
            brooklyn.config:
              name: sawtooth.grafana.uri
              static.value:
                $brooklyn:formatString:
                  - "http://%s:3000"
                  - $brooklyn:attributeWhenReady("host.address")
          - type: org.apache.brooklyn.core.sensor.StaticSensor
            brooklyn.config:
              name: sawtooth.rest-api.uri
              static.value:
                $brooklyn:formatString:
                  - "http://%s:8080/blocks"
                  - $brooklyn:attributeWhenReady("host.address")

        brooklyn.enrichers:
          - type: org.apache.brooklyn.enricher.stock.Propagator
            brooklyn.config:
              uniqueTag: grafana-main-uri-propagator
              sensorMapping:
                $brooklyn:sensor("sawtooth.grafana.uri"): $brooklyn:sensor("main.uri")
          - type: org.apache.brooklyn.enricher.stock.Propagator
            brooklyn.config:
              uniqueTag: validator-main-name-propagator
              producer: $brooklyn:child("sawtooth-validator")
              propagating:
                - $brooklyn:sensor("sawtooth.name")

    - id: sawtooth-validator-node
      description: |
        A Hyperledger Sawtooth Validator Node.
      itemType: entity
      iconUrl: "classpath://io.brooklyn.hyperledger.sawtooth:icon/sawtooth.png"
      item:
        type: sawtooth-docker-engine
        name: "sawtooth-validator-node"

        brooklyn.config:
          sawtooth.node:
            $brooklyn:formatString:
              - "%s-%03x"
              - $brooklyn:config("sawtooth.cluster.name")
              - $brooklyn:config("cluster.member.id")

        brooklyn.children:
          - type: sawtooth-validator
            name: "sawtooth-validator"
            id: sawtooth-validator
          - type: sawtooth-settings-tp
            name: "sawtooth-settings-tp"
            id: sawtooth-settings-tp
            brooklyn.config:
              launch.latch: $brooklyn:sibling("sawtooth-validator").attributeWhenReady("service.isUp")
          - type: sawtooth-identity-tp
            name: "sawtooth-identity-tp"
            id: sawtooth-identity-tp
            brooklyn.config:
              launch.latch: $brooklyn:sibling("sawtooth-validator").attributeWhenReady("service.isUp")
          - type: sawtooth-smallbank-tp
            name: "sawtooth-smallbank-tp"
            id: sawtooth-smallbank-tp
            brooklyn.config:
              launch.latch: $brooklyn:sibling("sawtooth-validator").attributeWhenReady("service.isUp")

        brooklyn.enrichers:
          - type: org.apache.brooklyn.enricher.stock.Propagator
            brooklyn.config:
              uniqueTag: validator-name-propagator
              producer: $brooklyn:child("sawtooth-validator")
              propagating:
                - $brooklyn:sensor("sawtooth.name")

    - id: sawtooth-workload-application
      description: |
        Hyperledger Sawtooth Workload Generator.
      itemType: entity
      iconUrl: "classpath://io.brooklyn.hyperledger.sawtooth:icon/sawtooth.png"
      item:
        type: org.apache.brooklyn.entity.stock.BasicApplication
        name: "sawtooth-workload-application"

        brooklyn.parameters:
          - name: cluster.endpoint
            description: "Docker Cluster Store URL"
            type: string
            constraints:
              - required
          - name: sawtooth.network
            description: "Network Name"
            type: string
            default: "sawtooth"

        brooklyn.children:
          - type: sawtooth-workload-node
            name: "sawtooth-workload-node"
            id: sawtooth-workload-node

    - id: sawtooth-workload-node
      description: |
        A Hyperledger Sawtooth Workload Generator Node.
      itemType: entity
      item:
        type: sawtooth-docker-engine
        name: "sawtooth-workload-node"

        brooklyn.children:
          - type: sawtooth-smallbank-workload
            name: "sawtooth-smallbank-workload"
            id: sawtooth-smallbank-workload
            brooklyn.config:
              sawtooth.rest-api.uri:
                $brooklyn:formatString:
                  - "http://rest-api.%s:8080/"
                  - $brooklyn:config("sawtooth.network")

    - id: sawtooth-remote-cluster-application
      description: |
        A Remote Hyperledger Sawtooth Cluster.
      itemType: entity
      iconUrl: "classpath://io.brooklyn.hyperledger.sawtooth:icon/sawtooth.png"
      item:
        type: org.apache.brooklyn.entity.stock.BasicApplication
        name: "sawtooth-remote-cluster-application"

        brooklyn.parameters:
          - name: sawtooth.size
            description: "Cluster Size"
            type: integer
            default: 2
            constraints:
              - required
          - name: sawtooth.network
            description: "Network Name"
            type: string
            default: "remote"
          - name: sawtooth.network.cidr
            description: "Network CIDR"
            type: string
            default: "10.1.0.0/24"
          - name: sawtooth.cluster.name
            description: "Cluster Name"
            type: string
            default: "remote"
          - name: sawtooth.network.seed
            description: "Seed Network Name"
            type: string
            default: "sawtooth"
          - name: openvpn.config
            description: "OpenVPN Config"
            type: string
            constraints:
              - required

        brooklyn.children:
          - type: etcd-node
            name: "etcd-node"
            id: etcd-node
          - type: sawtooth-remote-node
            name: "sawtooth-remote-node"
            id: sawtooth-remote-node
            brooklyn.config:
              cluster.endpoint:
                $brooklyn:sibling("etcd-node").attributeWhenReady("etcd.authority")
          - type: sawtooth-validator-cluster
            name: "sawtooth-validator-cluster"
            id: sawtooth-validator-cluster
            brooklyn.config:
              cluster.endpoint:
                $brooklyn:sibling("etcd-node").attributeWhenReady("etcd.authority")
              launch.latch:
                $brooklyn:ancestor("sawtooth-validator-cluster").sibling("sawtooth-remote-node").attributeWhenReady("service.isUp")
              dynamiccluster.firstmemberspec:
                $brooklyn:entitySpec:
                  type: sawtooth-validator-node
                  name: "sawtooth-validator-node"
                  brooklyn.config:
                    sawtooth.seed.validator:
                      $brooklyn:formatString:
                        - "validator.%s"
                        - $brooklyn:config("sawtooth.seed.network")
              dynamiccluster.memberspec:
                $brooklyn:entitySpec:
                  type: sawtooth-validator-node
                  name: "sawtooth-validator-node"
                  brooklyn.config:
                    sawtooth.seed.validator:
                      $brooklyn:formatString:
                        - "%s-000.%s"
                        - $brooklyn.config("sawtooth.cluster.name")
                        - $brooklyn:config("sawtooth.network")

    - id: sawtooth-remote-node
      description: |
        A Hyperledger Sawtooth Remote Networking Node.
      itemType: entity
      item:
        type: sawtooth-docker-engine
        name: "sawtooth-remote-node"

        brooklyn.config:
          shell.env:
            NETWORK: $brooklyn:config("sawtooth.network")
            SUBNET: $brooklyn:config("sawtooth.network.cidr")
          post.launch.command: |
            echo "[SAW] Setup {NETWORK} overlay network (${SUBNET})"
            docker network ls | grep "overlay.*${NETWORK}" ||
              docker network create \
                  --driver=overlay \
                  --subnet="${SUBNET}" \
                  "${NETWORK}"

        brooklyn.children:
          - type: openvpn-client
            name: "openvpn-client"
            id: openvpn-client
            brooklyn.config:
              openvpn.client: $brooklyn:config("sawtooth.network.seed")
          - type: openvpn-router
            name: "openvpn-router"
            id: openvpn-router

    - id: sawtooth-rest-api
      description: |
        The Main Hyperledger Sawtooth REST API Container.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-rest-api"

        brooklyn.config:
          container.name: "rest-api"
          image.name: "sawtooth-rest-api"

          shell.env:
            NODE: $brooklyn:config("sawtooth.node")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 4004 \
                -p 8080:8080 \
                ${IMAGE} \
                sawtooth-rest-api -v \
                    --connect tcp://${NODE}.${NETWORK}:4004 \
                    --bind 0.0.0.0:8080 \
                    --opentsdb-url http://influxdb.${NETWORK}:8086 \
                    --opentsdb-db metrics

    - id: sawtooth-validator-main
      description: |
        The Main Hyperledger Sawtooth Validator Container.
        Creates the Genesis block and initialises the blockchain.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-validator-main"

        brooklyn.config:
          container.name: "validator"
          image.name: "sawtooth-validator"

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 4004:4004 \
                -p 8800:8800 \
                ${IMAGE} \
                bash -c "\
                    sawtooth admin keygen --force && \
                    sawtooth keygen ${NETWORK} --force && \
                    sawtooth config genesis -k /etc/sawtooth/keys/validator.priv -o genesis.batch && \
                    sawtooth admin genesis genesis.batch && \
                    sawtooth-validator -vv \
                      --endpoint tcp://validator.${NETWORK}:8800 \
                      --bind component:tcp://eth0:4004 \
                      --bind network:tcp://eth0:8800 \
                      --peering dynamic \
                      --opentsdb-url http://influxdb.${NETWORK}:8086 \
                      --opentsdb-db metrics"

        brooklyn.initializers:
          - type: org.apache.brooklyn.core.sensor.StaticSensor
            brooklyn.config:
              name: sawtooth.name
              static.value:
                $brooklyn:formatString:
                  - "%s.%s"
                  - $brooklyn:config("sawtooth.node")
                  - $brooklyn:config("sawtooth.network")
          - type: org.apache.brooklyn.core.sensor.ssh.SshCommandSensor
            brooklyn.config:
              name: sawtooth.key.private
              description: |
                The private key for this Sawtooth network
              command: |
                docker exec \
                    validator \
                    bash -c "test -f /root/.sawtooth/keys/${NETWORK}.priv && cat /root/.sawtooth/keys/${NETWORK}.priv"
          - type: org.apache.brooklyn.core.sensor.ssh.SshCommandSensor
            brooklyn.config:
              name: sawtooth.key.public
              description: |
                The public key for this Sawtooth network
              command: |
                docker exec \
                    validator \
                    bash -c "test -f /root/.sawtooth/keys/${NETWORK}.pub && cat /root/.sawtooth/keys/${NETWORK}.pub"

    - id: sawtooth-validator
      description: |
        The Hyperledger Sawtooth Validator Container.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-validator"

        brooklyn.config:
          container.name: $brooklyn:config("sawtooth.node")
          image.name: "sawtooth-validator"

          shell.env:
            NODE: $brooklyn:config("sawtooth.node")
            SEED_NETWORK: $brooklyn:config("sawtooth.seed.network")
            SEED_VALIDATOR: $brooklyn:config("sawtooth.seed.validator")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 4004:4004 \
                -p 8800:8800 \
                ${IMAGE} \
                bash -c "\
                    sawtooth admin keygen --force && \
                    sawtooth keygen --force && \
                    sawtooth-validator -vv \
                      --endpoint tcp://${NODE}.${NETWORK}:8800 \
                      --bind component:tcp://eth0:4004 \
                      --bind network:tcp://eth0:8800 \
                      --peering dynamic \
                      --peers tcp://${SEED_VALIDATOR}:8800 \
                      --seed tcp://${SEED_VALIDATOR}:8800 \
                      --opentsdb-url http://influxdb.${SEED_NETWORK}:8086 \
                      --opentsdb-db metrics"

        brooklyn.initializers:
          - type: org.apache.brooklyn.core.sensor.StaticSensor
            brooklyn.config:
              name: sawtooth.name
              static.value:
                $brooklyn:formatString:
                  - "%s.%s"
                  - $brooklyn:config("sawtooth.node")
                  - $brooklyn:config("sawtooth.network")

    - id: sawtooth-settings-tp
      description: |
        The Hyperledger Sawtooth Settings Transaction Processor Container.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-settings-tp"

        brooklyn.config:
          container.name:
            $brooklyn:formatString:
              - "settings-tp-%s"
              - $brooklyn:attributeWhenReady("entity.id")
          image.name: "sawtooth-settings-tp"

          shell.env:
            NODE: $brooklyn:config("sawtooth.node")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 4004 \
                ${IMAGE} \
                settings-tp -vv -C tcp://${NODE}.${NETWORK}:4004

    - id: sawtooth-identity-tp
      description: |
        The Hyperledger Sawtooth Identity Transaction Processor Container.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-identity-tp"

        brooklyn.config:
          container.name:
            $brooklyn:formatString:
              - "identity-tp-%s"
              - $brooklyn:attributeWhenReady("entity.id")
          image.name: "sawtooth-identity-tp"

          shell.env:
            NODE: $brooklyn:config("sawtooth.node")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 4004 \
                ${IMAGE} \
                identity-tp -vv -C tcp://${NODE}.${NETWORK}:4004

    - id: sawtooth-smallbank-tp
      description: |
        The Hyperledger Sawtooth Smallbank Transaction Processor Container.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-smallbank-tp"

        brooklyn.config:
          container.name:
            $brooklyn:formatString:
              - "smallbank-tp-%s"
              - $brooklyn:attributeWhenReady("entity.id")
          image.name: "sawtooth-smallbank-tp-go"

          shell.env:
            NODE: $brooklyn:config("sawtooth.node")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 4004 \
                ${IMAGE} \
                smallbank-tp-go -vv tcp://${NODE}.${NETWORK}:4004

    - id: influxdb
      description: |
        The InfluxDB Container.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "influxdb"

        brooklyn.config:
          container.name: "influxdb"
          image.name: "sawtooth-stats-influxdb"

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 8086:8086 \
                ${IMAGE}

    - id: grafana
      description: |
        The Grafana Container.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "grafana"

        brooklyn.config:
          container.name: "grafana"
          image.name: "sawtooth-stats-grafana"

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 3000:3000 \
                ${IMAGE}

    - id: telegraf
      description: |
        The Telegraf Container.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "telegraf"

        brooklyn.config:
          container.name: "telegraf"
          image.name: "telegraf"
          repository.name: "library"

          shell.env:
            INSTALL_DIR: $brooklyn:attributeWhenReady("install.dir")

          files.install:
            "classpath://io.brooklyn.hyperledger.sawtooth:sawtooth/telegraf.conf": telegraf.conf

          customize.command: |
            mkdir config
            mv ${INSTALL_DIR}/telegraf.conf config

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                --privileged \
                -e "NETWORK=${NETWORK}" \
                -e "DOCKER_HOST=${DOCKER_HOST}" \
                -v "$(pwd)/config:/config" \
                ${IMAGE} \
                telegraf --config /config/telegraf.conf

    - id: sawtooth-smallbank-workload
      description: |
        The Hyperledger Sawtooth Smallbank Workload Generator Container.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-smallbank-workload"

        brooklyn.config:
          container.name: "smallbank-workload"
          image.name: "smallbank-workload"

          customise.command: |
            mkdir data

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -ti \
                -v "$(pwd)/data:/data" \
                ${IMAGE} \
                bash

        brooklyn.initializers:
          - type: org.apache.brooklyn.core.effector.ssh.SshCommandEffector
            brooklyn.config:
              name: "create-transactions"
              description: "Creates batches of Smallbank transactions for workload testing"
              parameters:
                key:
                  description: "The private key data to sign the transactions with"
                filename:
                  description: "The name of the transaction file to create"
                  defaultValue: "sawtooth"
                accounts:
                  description: "Number of accounts to create"
                  defaultValue: 10
                transactions:
                  description: "Number of transactions to create"
                  defaultValue: 1000
                batches:
                  description: "Number of batches to create"
                  defaultValue: 10
              command: |
                echo "${key}" | sudo tee -a data/${filename}.priv
                docker exec \
                    smallbank-workload \
                    /bin/create.sh \
                      /data/${filename}.priv \
                      ${filename} \
                      ${accounts} \
                      ${transactions} \
                      ${batches}
          - type: org.apache.brooklyn.core.effector.ssh.SshCommandEffector
            brooklyn.config:
              name: "submit-transactions"
              description: "Submit batches of generated Smallbank transactions as workload testing"
              parameters:
                filename:
                  description: "The name of the transaction file to submit"
                  defaultValue: "sawtooth"
                endpoint:
                  description: "The REST API endpoint to use"
                rate:
                  description: "Rate of transactions per second"
                  defaultValue: 10
              command: |
                docker exec \
                    smallbank-workload \
                    /bin/submit.sh \
                      ${filename} \
                      ${endpoint} \
                      ${rate}
