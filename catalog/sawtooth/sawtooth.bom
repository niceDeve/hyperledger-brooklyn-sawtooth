brooklyn.catalog:
  version: "0.4.0-SNAPSHOT" # BROOKLYN_HYPERLEDGER_SAWTOOTH_VERSION
  publish:
    description: |
      Entities for Hyperledger Sawtooth.
    license_code: APACHE-2.0
    icon_url: "classpath://io.brooklyn.hyperledger.sawtooth:icon/sawtooth.png"

  items:
    - id: sawtooth-cluster-application
      description: |
        Hyperledger Sawtooth cluster application.
      itemType: entity
      iconUrl: "classpath://io.brooklyn.hyperledger.sawtooth:icon/sawtooth.png"
      item:
        type: org.apache.brooklyn.entity.stock.BasicApplication
        name: "sawtooth-cluster-application"

        brooklyn.parameters:
          - name: sawtooth.version
            description: "Sawtooth Version"
            type: string
            default: "latest"
          - name: sawtooth.repository
            description: "Sawtooth Repository"
            type: string
            default: "sawtooth"
          - name: sawtooth.size
            description: "Cluster Size"
            type: integer
            default: 2
            constraints:
              - required
          - name: sawtooth.network
            description: "Network Name"
            type: string
            default: "sawtooth"
          - name: sawtooth.network.cidr
            description: "Network CIDR"
            type: string
            default: "10.0.0.0/24"
          - name: sawtooth.network.gw
            description: "Network Gateway"
            type: string
            default: "10.0.0.1"
          - name: sawtooth.cluster.name
            description: "Cluster Name"
            type: string
            default: "sawtooth"

        brooklyn.children:
          - type: etcd-node
            name: "etcd-node"
            id: etcd-node
            brooklyn.config:
              pre.install.command: |
                sudo yum update -y nss nss-util nspr curl
          - type: sawtooth-server-node
            name: "sawtooth-server-node"
            id: sawtooth-server-node
            brooklyn.config:
              cluster.endpoint:
                $brooklyn:sibling("etcd-node").attributeWhenReady("etcd.authority")
          - type: sawtooth-validator-cluster
            name: "sawtooth-validator-cluster"
            id: sawtooth-validator-cluster
            brooklyn.config:
              cluster.endpoint:
                $brooklyn:sibling("etcd-node").attributeWhenReady("etcd.authority")
              latch.launch:
                $brooklyn:ancestor("sawtooth-validator-cluster").sibling("sawtooth-server-node").attributeWhenReady("service.isUp")
              sawtooth.seed.network: $brooklyn:config("sawtooth.network")
              sawtooth.seed.validator:
                $brooklyn:formatString:
                  - "validator.%s"
                  - $brooklyn:config("sawtooth.network")

        brooklyn.enrichers:
          - type: org.apache.brooklyn.enricher.stock.Propagator
            brooklyn.config:
              uniqueTag: rest-api-main-uri-propagator
              producer: $brooklyn:component("sawtooth-server-node")
              sensorMapping:
                $brooklyn:sensor("sawtooth.rest-api.uri"): $brooklyn:sensor("main.uri")

    - id: sawtooth-validator-cluster
      description: |
        A cluster of Hyperledger Sawtooth validators.
      itemType: entity
      item:
        type: cluster
        name: "sawtooth-validator-cluster"

        brooklyn.config:
          cluster.initial.size: $brooklyn:config("sawtooth.size")
          dynamiccluster.memberspec:
            $brooklyn:entitySpec:
              type: sawtooth-validator-node
              name: "sawtooth-validator-node"

    - id: sawtooth-server-node
      description: |
        The Hyperledger Sawtooth server node.

        Initialises the network and starts an OpenVPN server. Starts an InfluxDB
        metrics database and the Grafana dashboard with a Telegraf monitoring service.
        Exposes endpoints for the Grafana, Sawtooth REST API and Seth RPC services.
      itemType: entity
      iconUrl: "classpath://io.brooklyn.hyperledger.sawtooth:icon/sawtooth.png"
      item:
        type: sawtooth-docker-engine
        name: "sawtooth-server-node"

        brooklyn.config:
          sawtooth.node: "validator"
          shell.env:
            NETWORK: $brooklyn:config("sawtooth.network")
            SUBNET: $brooklyn:config("sawtooth.network.cidr")
            GATEWAY: $brooklyn:config("sawtooth.network.gw")
          post.launch.command: |
            echo "[SAW] Setup ${NETWORK} overlay network (${SUBNET})"
            docker network ls | grep "overlay.*${NETWORK}" ||
              docker network create \
                  --driver=overlay \
                  --subnet="${SUBNET}" \
                  --gateway="${GATEWAY}" \
                  "${NETWORK}"

        brooklyn.children:
          - type: openvpn-server
            name: "openvpn-server"
            id: openvpn-server
          - type: influxdb
            name: "influxdb"
            id: influxdb
          - type: grafana
            name: "grafana"
            id: grafana
            brooklyn.config:
              latch.launch: $brooklyn:sibling("influxdb").attributeWhenReady("service.isUp")
          - type: telegraf
            name: "telegraf"
            id: telegraf
            brooklyn.config:
              latch.launch: $brooklyn:sibling("grafana").attributeWhenReady("service.isUp")
          - type: sawtooth-rest-api
            name: "sawtooth-rest-api"
            id: sawtooth-rest-api
            brooklyn.config:
              latch.launch: $brooklyn:sibling("grafana").attributeWhenReady("service.isUp")
          - type: sawtooth-validator-main
            name: "sawtooth-validator"
            id: sawtooth-validator
            brooklyn.config:
              latch.launch: $brooklyn:sibling("grafana").attributeWhenReady("service.isUp")
          - type: sawtooth-settings-tp
            name: "sawtooth-settings-tp"
            id: sawtooth-settings-tp
            brooklyn.config:
              latch.launch: $brooklyn:sibling("sawtooth-validator").attributeWhenReady("service.isUp")
          - type: sawtooth-identity-tp
            name: "sawtooth-identity-tp"
            id: sawtooth-identity-tp
            brooklyn.config:
              latch.launch: $brooklyn:sibling("sawtooth-validator").attributeWhenReady("service.isUp")
          - type: sawtooth-block-info-tp
            name: "sawtooth-block-info-tp"
            id: sawtooth-block-info-tp
            brooklyn.config:
              latch.launch: $brooklyn:sibling("sawtooth-validator").attributeWhenReady("service.isUp")
          - type: sawtooth-smallbank-tp
            name: "sawtooth-smallbank-tp"
            id: sawtooth-smallbank-tp
            brooklyn.config:
              latch.launch: $brooklyn:sibling("sawtooth-validator").attributeWhenReady("service.isUp")
          - type: sawtooth-seth-tp
            name: "sawtooth-seth-tp"
            id: sawtooth-seth-tp
            brooklyn.config:
              latch.launch: $brooklyn:sibling("sawtooth-validator").attributeWhenReady("service.isUp")
              post.launch.command: |
                docker exec ${CONTAINER_NAME} \
                  seth init http://rest-api.${NETWORK}:8080
                docker exec ${CONTAINER_NAME} \
                  bash -c "openssl ecparam -genkey -name secp256k1 | openssl ec -out brooklyn.pem" > /dev/null
                docker exec ${CONTAINER_NAME} \
                  seth account import brooklyn.pem brooklyn > /dev/null
                docker exec ${CONTAINER_NAME} \
                  seth account create --nonce=1 --wait brooklyn > ${HOME}/brooklyn.out
          - type: sawtooth-seth-rpc
            name: "sawtooth-seth-rpc"
            id: sawtooth-seth-rpc
            brooklyn.config:
              latch.launch: $brooklyn:sibling("sawtooth-seth-tp").attributeWhenReady("service.isUp")
              sawtooth.seth-tp: $brooklyn:sibling("sawtooth-seth-tp").config("container.name")

        brooklyn.initializers:
          - type: org.apache.brooklyn.core.sensor.StaticSensor
            brooklyn.config:
              name: sawtooth.grafana.uri
              static.value:
                $brooklyn:formatString:
                  - "http://%s:3000"
                  - $brooklyn:attributeWhenReady("host.address")
          - type: org.apache.brooklyn.core.sensor.StaticSensor
            brooklyn.config:
              name: sawtooth.rest-api.uri
              static.value:
                $brooklyn:formatString:
                  - "http://%s:8080/blocks"
                  - $brooklyn:attributeWhenReady("host.address")
          - type: org.apache.brooklyn.core.sensor.StaticSensor
            brooklyn.config:
              name: sawtooth.seth-rpc.uri
              static.value:
                $brooklyn:formatString:
                  - "http://%s:3030/"
                  - $brooklyn:attributeWhenReady("host.address")
          - type: org.apache.brooklyn.core.sensor.ssh.SshCommandSensor
            brooklyn.config:
              name: sawtooth.seth.account
              description: |
                The account ID for Sawtooth Seth
              command: |
                cat ${HOME}/brooklyn.out |
                  grep "Address" |
                  tr -d \" |
                  cut -d\  -f4

        brooklyn.enrichers:
          - type: org.apache.brooklyn.enricher.stock.Propagator
            brooklyn.config:
              uniqueTag: grafana-main-uri-propagator
              sensorMapping:
                $brooklyn:sensor("sawtooth.grafana.uri"): $brooklyn:sensor("main.uri")
          - type: org.apache.brooklyn.enricher.stock.Propagator
            brooklyn.config:
              uniqueTag: validator-main-name-propagator
              producer: $brooklyn:child("sawtooth-validator")
              propagating:
                - $brooklyn:sensor("sawtooth.name")

    - id: sawtooth-validator-node
      description: |
        A Hyperledger Sawtooth validator node.
      itemType: entity
      iconUrl: "classpath://io.brooklyn.hyperledger.sawtooth:icon/sawtooth.png"
      item:
        type: sawtooth-docker-engine
        name: "sawtooth-validator-node"

        brooklyn.config:
          sawtooth.node:
            $brooklyn:formatString:
              - "%s-%03x"
              - $brooklyn:config("sawtooth.cluster.name")
              - $brooklyn:config("cluster.member.id")
          displayName:
            $brooklyn:formatString:
              - "validator-%s"
              - $brooklyn:config("sawtooth.node")

        brooklyn.children:
          - type: sawtooth-validator
            name: "sawtooth-validator"
            id: sawtooth-validator
          - type: sawtooth-settings-tp
            name: "sawtooth-settings-tp"
            id: sawtooth-settings-tp
            brooklyn.config:
              latch.launch: $brooklyn:sibling("sawtooth-validator").attributeWhenReady("service.isUp")
          - type: sawtooth-identity-tp
            name: "sawtooth-identity-tp"
            id: sawtooth-identity-tp
            brooklyn.config:
              latch.launch: $brooklyn:sibling("sawtooth-validator").attributeWhenReady("service.isUp")
          - type: sawtooth-block-info-tp
            name: "sawtooth-block-info-tp"
            id: sawtooth-block-info-tp
            brooklyn.config:
              latch.launch: $brooklyn:sibling("sawtooth-validator").attributeWhenReady("service.isUp")
          - type: sawtooth-smallbank-tp
            name: "sawtooth-smallbank-tp"
            id: sawtooth-smallbank-tp
            brooklyn.config:
              latch.launch: $brooklyn:sibling("sawtooth-validator").attributeWhenReady("service.isUp")
          - type: sawtooth-seth-tp
            name: "sawtooth-seth-tp"
            id: sawtooth-seth-tp
            brooklyn.config:
              latch.launch: $brooklyn:sibling("sawtooth-validator").attributeWhenReady("service.isUp")

        brooklyn.enrichers:
          - type: org.apache.brooklyn.enricher.stock.Propagator
            brooklyn.config:
              uniqueTag: validator-name-propagator
              producer: $brooklyn:child("sawtooth-validator")
              propagating:
                - $brooklyn:sensor("sawtooth.name")

    - id: sawtooth-workload-application
      description: |
        Hyperledger Sawtooth workload generator application.
      itemType: entity
      iconUrl: "classpath://io.brooklyn.hyperledger.sawtooth:icon/sawtooth.png"
      item:
        type: org.apache.brooklyn.entity.stock.BasicApplication
        name: "sawtooth-workload-application"

        brooklyn.parameters:
          - name: sawtooth.version
            description: "Sawtooth Version"
            type: string
            default: "latest"
          - name: sawtooth.repository
            description: "Sawtooth Repository"
            type: string
            default: "sawtooth"
          - name: cluster.endpoint
            description: "Docker Cluster Store URL"
            type: string
            constraints:
              - required
          - name: sawtooth.network
            description: "Network Name"
            type: string
            default: "sawtooth"

        brooklyn.children:
          - type: sawtooth-workload-node
            name: "sawtooth-workload-node"
            id: sawtooth-workload-node

    - id: sawtooth-workload-node
      description: |
        A Hyperledger Sawtooth workload generator node.
      itemType: entity
      item:
        type: sawtooth-docker-engine
        name: "sawtooth-workload-node"

        brooklyn.children:
          - type: sawtooth-smallbank-workload
            name: "sawtooth-smallbank-workload"
            id: sawtooth-smallbank-workload
            brooklyn.config:
              sawtooth.rest-api.uri:
                $brooklyn:formatString:
                  - "http://rest-api.%s:8080/"
                  - $brooklyn:config("sawtooth.network")

    - id: sawtooth-remote-cluster-application
      description: |
        Remote Hyperledger Sawtooth cluster application.
      itemType: entity
      iconUrl: "classpath://io.brooklyn.hyperledger.sawtooth:icon/sawtooth.png"
      item:
        type: org.apache.brooklyn.entity.stock.BasicApplication
        name: "sawtooth-remote-cluster-application"

        brooklyn.parameters:
          - name: sawtooth.version
            description: "Sawtooth Version"
            type: string
            default: "latest"
          - name: sawtooth.repository
            description: "Sawtooth Repository"
            type: string
            default: "sawtooth"
          - name: sawtooth.size
            description: "Cluster Size"
            type: integer
            default: 2
            constraints:
              - required
          - name: sawtooth.network
            description: "Network Name"
            type: string
            default: "remote"
          - name: sawtooth.network.cidr
            description: "Network CIDR"
            type: string
            default: "10.1.0.0/24"
          - name: sawtooth.network.gw
            description: "Network Gateway"
            type: string
            default: "10.1.0.1"
          - name: sawtooth.cluster.name
            description: "Cluster Name"
            type: string
            default: "remote"
          - name: sawtooth.network.seed
            description: "Seed Network Name"
            type: string
            default: "sawtooth"
          - name: openvpn.config
            description: "OpenVPN Config"
            type: string
            constraints:
              - required

        brooklyn.children:
          - type: etcd-node
            name: "etcd-node"
            id: etcd-node
          - type: sawtooth-remote-server-node
            name: "sawtooth-remote-server-node"
            id: sawtooth-remote-server-node
            brooklyn.config:
              cluster.endpoint:
                $brooklyn:sibling("etcd-node").attributeWhenReady("etcd.authority")
          - type: sawtooth-validator-cluster
            name: "sawtooth-validator-cluster"
            id: sawtooth-validator-cluster
            brooklyn.config:
              cluster.endpoint:
                $brooklyn:sibling("etcd-node").attributeWhenReady("etcd.authority")
              latch.launch:
                $brooklyn:ancestor("sawtooth-validator-cluster").sibling("sawtooth-remote-server-node").attributeWhenReady("service.isUp")
              dynamiccluster.memberspec:
                $brooklyn:entitySpec:
                  type: sawtooth-remote-validator-node
                  name: "sawtooth-validator-node"
                  id: sawtooth-validator-node
                  brooklyn.config:
                    sawtooth.seed.validator:
                      $brooklyn:formatString:
                        - "%s-000.%s"
                        - $brooklyn.config("sawtooth.cluster.name")
                        - $brooklyn:config("sawtooth.network")

        brooklyn.enrichers:
          - type: org.apache.brooklyn.enricher.stock.Propagator
            brooklyn.config:
              uniqueTag: remote-rest-api-main-uri-propagator
              producer: $brooklyn:component("sawtooth-remote-server-node")
              sensorMapping:
                $brooklyn:sensor("sawtooth.rest-api.uri"): $brooklyn:sensor("main.uri")

    - id: sawtooth-remote-server-node
      description: |
        A remote Hyperledger Sawtooth server node.

        Initialises the remote network and connects to the OpenVPN server. Exposes
        endpoints for the Sawtooth REST API and Seth RPC services.
      itemType: entity
      iconUrl: "classpath://io.brooklyn.hyperledger.sawtooth:icon/sawtooth.png"
      item:
        type: sawtooth-remote-validator-node
        name: "sawtooth-remote-server-node"

        brooklyn.config:
          sawtooth.seed.validator:
            $brooklyn:formatString:
              - "validator.%s"
              - $brooklyn:config("sawtooth.seed.network")
          shell.env:
            NETWORK: $brooklyn:config("sawtooth.network")
            SUBNET: $brooklyn:config("sawtooth.network.cidr")
            GATEWAY: $brooklyn:config("sawtooth.network.gw")
          post.launch.command: |
            echo "[SAW] Setup ${NETWORK} overlay network (${SUBNET})"
            docker network ls | grep "overlay.*${NETWORK}" ||
              docker network create \
                  --driver=overlay \
                  --subnet="${SUBNET}" \
                  --gateway="${GATEWAY}" \
                  "${NETWORK}"

        brooklyn.children:
          - type: openvpn-client
            name: "openvpn-client"
            id: openvpn-client
            brooklyn.config:
              openvpn.client: $brooklyn:config("sawtooth.seed.network")
          - type: sawtooth-rest-api
            name: "sawtooth-rest-api"
            id: sawtooth-rest-api
            brooklyn.config:
              latch.launch: $brooklyn:sibling("sawtooth-validator").attributeWhenReady("service.isUp")
          - type: sawtooth-seth-rpc
            name: "sawtooth-seth-rpc"
            id: sawtooth-seth-rpc
            brooklyn.config:
              latch.launch: $brooklyn:sibling("sawtooth-validator").attributeWhenReady("service.isUp")
              sawtooth.seth-tp: $brooklyn:sibling("sawtooth-seth-tp").config("container.name")

        brooklyn.initializers:
          - type: org.apache.brooklyn.core.sensor.StaticSensor
            brooklyn.config:
              name: sawtooth.rest-api.uri
              static.value:
                $brooklyn:formatString:
                  - "http://%s:8080/blocks"
                  - $brooklyn:attributeWhenReady("host.address")
          - type: org.apache.brooklyn.core.sensor.StaticSensor
            brooklyn.config:
              name: sawtooth.seth-rpc.uri
              static.value:
                $brooklyn:formatString:
                  - "http://%s:3030/"
                  - $brooklyn:attributeWhenReady("host.address")

    - id: sawtooth-remote-validator-node
      description: |
        A remote Hyperledger Sawtooth validator node.

        Adds the network administration capability to child containers, to enable
        altering their IP routing table, and starts a router service for the host.
      itemType: entity
      iconUrl: "classpath://io.brooklyn.hyperledger.sawtooth:icon/sawtooth.png"
      item:
        type: sawtooth-validator-node
        name: "sawtooth-validator-node"

        brooklyn.config:
          container.options: "--cap-add=NET_ADMIN"

        brooklyn.children:
          - type: openvpn-router
            name: "openvpn-router"
            id: openvpn-router
            brooklyn.config:
              container.name:
                $brooklyn:formatString:
                  - "openvpn-router-%s"
                  - $brooklyn:attributeWhenReady("entity.id")
              openvpn.client: $brooklyn:config("sawtooth.seed.network")
              openvpn.network.cidr: $brooklyn:config("sawtooth.seed.network.cidr")

    - id: sawtooth-rest-api
      description: |
        The main Hyperledger Sawtooth REST API container.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-rest-api"

        brooklyn.config:
          container.name: "rest-api"
          image.name: "sawtooth-rest-api"
          image.version: $brooklyn:config("sawtooth.version")
          image.repository: $brooklyn:config("sawtooth.repository")

          shell.env:
            NODE: $brooklyn:config("sawtooth.node")
            SEED_NETWORK: $brooklyn:config("sawtooth.seed.network")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 4004 \
                -p 8080:8080 \
                ${CONTAINER_OPTIONS} \
                ${IMAGE} \
                sawtooth-rest-api -v \
                    --connect tcp://${NODE}.${NETWORK}:4004 \
                    --bind 0.0.0.0:8080 \
                    --opentsdb-url http://influxdb.${SEED_NETWORK:-${NETWORK}}:8086 \
                    --opentsdb-db metrics

    - id: sawtooth-validator-main
      description: |
        The main Hyperledger Sawtooth validator container.

        Configures the validator with the genesis block, creates various private
        keys, enables injecting 'block-info' transactions and initialises the
        blockchain.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-validator-main"

        brooklyn.config:
          container.name: "validator"
          image.name: "sawtooth-validator"
          image.version: $brooklyn:config("sawtooth.version")
          image.repository: $brooklyn:config("sawtooth.repository")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 4004:4004 \
                -p 8800:8800 \
                ${CONTAINER_OPTIONS} \
                ${IMAGE} \
                bash -c "\
                    sawadm keygen --force && \
                    sawtooth keygen ${NETWORK} --force && \
                    sawset genesis \
                      -k /etc/sawtooth/keys/validator.priv \
                      -o genesis.batch && \
                    sawset proposal create \
                      -k /etc/sawtooth/keys/validator.priv \
                      sawtooth.validator.batch_injectors=block_info \
                      -o config.batch && \
                    sawadm genesis \
                      genesis.batch config.batch && \
                    sawtooth-validator -vv \
                      --endpoint tcp://validator.${NETWORK}:8800 \
                      --bind component:tcp://eth0:4004 \
                      --bind network:tcp://eth0:8800 \
                      --peering dynamic \
                      --minimum-peer-connectivity 255 \
                      --maximum-peer-connectivity 255 \
                      --opentsdb-url http://influxdb.${NETWORK}:8086 \
                      --opentsdb-db metrics"

        brooklyn.initializers:
          - type: org.apache.brooklyn.core.sensor.StaticSensor
            brooklyn.config:
              name: sawtooth.name
              static.value:
                $brooklyn:formatString:
                  - "%s.%s"
                  - $brooklyn:config("sawtooth.node")
                  - $brooklyn:config("sawtooth.network")
          - type: org.apache.brooklyn.core.sensor.ssh.SshCommandSensor
            brooklyn.config:
              name: sawtooth.key.private
              description: |
                The private key for this Sawtooth network
              command: |
                docker exec \
                    validator \
                    bash -c "test -f /root/.sawtooth/keys/${NETWORK}.priv && cat /root/.sawtooth/keys/${NETWORK}.priv"
          - type: org.apache.brooklyn.core.sensor.ssh.SshCommandSensor
            brooklyn.config:
              name: sawtooth.key.public
              description: |
                The public key for this Sawtooth network
              command: |
                docker exec \
                    validator \
                    bash -c "test -f /root/.sawtooth/keys/${NETWORK}.pub && cat /root/.sawtooth/keys/${NETWORK}.pub"

    - id: sawtooth-validator
      description: |
        A Hyperledger Sawtooth validator container.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-validator"

        brooklyn.config:
          container.name: $brooklyn:config("sawtooth.node")
          image.name: "sawtooth-validator"
          image.version: $brooklyn:config("sawtooth.version")
          image.repository: $brooklyn:config("sawtooth.repository")

          shell.env:
            NODE: $brooklyn:config("sawtooth.node")
            SEED_NETWORK: $brooklyn:config("sawtooth.seed.network")
            SEED_VALIDATOR: $brooklyn:config("sawtooth.seed.validator")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 4004:4004 \
                -p 8800:8800 \
                ${CONTAINER_OPTIONS} \
                ${IMAGE} \
                bash -c "\
                    sawadm keygen --force && \
                    sawtooth keygen --force && \
                    sawtooth-validator -vv \
                      --endpoint tcp://${NODE}.${NETWORK}:8800 \
                      --bind component:tcp://eth0:4004 \
                      --bind network:tcp://eth0:8800 \
                      --peering dynamic \
                      --minimum-peer-connectivity 255 \
                      --maximum-peer-connectivity 255 \
                      --peers tcp://${SEED_VALIDATOR}:8800 \
                      --seed tcp://${SEED_VALIDATOR}:8800 \
                      --opentsdb-url http://influxdb.${SEED_NETWORK}:8086 \
                      --opentsdb-db metrics"

        brooklyn.initializers:
          - type: org.apache.brooklyn.core.sensor.StaticSensor
            brooklyn.config:
              name: sawtooth.name
              static.value:
                $brooklyn:formatString:
                  - "%s.%s"
                  - $brooklyn:config("sawtooth.node")
                  - $brooklyn:config("sawtooth.network")

    - id: sawtooth-settings-tp
      description: |
        A Hyperledger Sawtooth transaction processor container for the
        'settings' family.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-settings-tp"

        brooklyn.config:
          container.name:
            $brooklyn:formatString:
              - "settings-tp-%s"
              - $brooklyn:attributeWhenReady("entity.id")
          image.name: "sawtooth-settings-tp"
          image.version: $brooklyn:config("sawtooth.version")
          image.repository: $brooklyn:config("sawtooth.repository")

          shell.env:
            NODE: $brooklyn:config("sawtooth.node")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 4004 \
                ${CONTAINER_OPTIONS} \
                ${IMAGE} \
                settings-tp -vv --connect tcp://${NODE}.${NETWORK}:4004

    - id: sawtooth-identity-tp
      description: |
        A Hyperledger Sawtooth transaction processor container for the
        'identity' family.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-identity-tp"

        brooklyn.config:
          container.name:
            $brooklyn:formatString:
              - "identity-tp-%s"
              - $brooklyn:attributeWhenReady("entity.id")
          image.name: "sawtooth-identity-tp"
          image.version: $brooklyn:config("sawtooth.version")
          image.repository: $brooklyn:config("sawtooth.repository")

          shell.env:
            NODE: $brooklyn:config("sawtooth.node")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 4004 \
                ${CONTAINER_OPTIONS} \
                ${IMAGE} \
                identity-tp -vv --connect tcp://${NODE}.${NETWORK}:4004

    - id: sawtooth-intkey-tp
      description: |
        A Hyperledger Sawtooth transaction processor container for the
        'intkey' family.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-intkey-tp"

        brooklyn.config:
          container.name:
            $brooklyn:formatString:
              - "intkey-tp-%s"
              - $brooklyn:attributeWhenReady("entity.id")
          image.name: "sawtooth-intkey-tp-go"
          image.version: $brooklyn:config("sawtooth.version")
          image.repository: $brooklyn:config("sawtooth.repository")

          shell.env:
            NODE: $brooklyn:config("sawtooth.node")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 4004 \
                ${CONTAINER_OPTIONS} \
                ${IMAGE} \
                intkey-tp-go -vv --connect tcp://${NODE}.${NETWORK}:4004

    - id: sawtooth-xo-tp
      description: |
        A Hyperledger Sawtooth transaction processor container for the
        'xo' family.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-xo-tp"

        brooklyn.config:
          container.name:
            $brooklyn:formatString:
              - "xo-tp-%s"
              - $brooklyn:attributeWhenReady("entity.id")
          image.name: "sawtooth-xo-tp-go"
          image.version: $brooklyn:config("sawtooth.version")
          image.repository: $brooklyn:config("sawtooth.repository")

          shell.env:
            NODE: $brooklyn:config("sawtooth.node")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 4004 \
                ${CONTAINER_OPTIONS} \
                ${IMAGE} \
                xo-tp-go -vv --connect tcp://${NODE}.${NETWORK}:4004

    - id: sawtooth-smallbank-tp
      description: |
        A Hyperledger Sawtooth transaction processor container for the
        'smallbank' family.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-smallbank-tp"

        brooklyn.config:
          container.name:
            $brooklyn:formatString:
              - "smallbank-tp-%s"
              - $brooklyn:attributeWhenReady("entity.id")
          image.name: "sawtooth-smallbank-tp-go"
          image.version: $brooklyn:config("sawtooth.version")
          image.repository: $brooklyn:config("sawtooth.repository")

          shell.env:
            NODE: $brooklyn:config("sawtooth.node")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 4004 \
                ${CONTAINER_OPTIONS} \
                ${IMAGE} \
                smallbank-tp-go -vv tcp://${NODE}.${NETWORK}:4004

    - id: sawtooth-block-info-tp
      description: |
        A Hyperledger Sawtooth transaction processor container for the
        'block-info' family.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-block-info-tp"

        brooklyn.config:
          container.name:
            $brooklyn:formatString:
              - "block-info-tp-%s"
              - $brooklyn:attributeWhenReady("entity.id")
          image.name: "sawtooth-block-info-tp"
          image.version: $brooklyn:config("sawtooth.version")
          image.repository: $brooklyn:config("sawtooth.repository")

          shell.env:
            NODE: $brooklyn:config("sawtooth.node")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 4004 \
                ${CONTAINER_OPTIONS} \
                ${IMAGE} \
                block-info-tp --connect tcp://${NODE}.${NETWORK}:4004

    - id: sawtooth-seth-tp
      description: |
        A Hyperledger Sawtooth transaction processor container for the
        'seth' family.

        Enables the execution of EVM Solidity smart contracts.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-seth-tp"

        brooklyn.config:
          container.name:
            $brooklyn:formatString:
              - "seth-tp-%s"
              - $brooklyn:attributeWhenReady("entity.id")
          image.name: "sawtooth-seth"
          image.version: $brooklyn:config("sawtooth.version")
          image.repository: $brooklyn:config("sawtooth.repository")

          shell.env:
            NODE: $brooklyn:config("sawtooth.node")

          customise.command: |
            mkdir data

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 4004 \
                -v "$(pwd)/data:/data" \
                ${CONTAINER_OPTIONS} \
                ${IMAGE} \
                /bin/seth-tp -vv --connect tcp://${NODE}.${NETWORK}:4004

        brooklyn.initializers:
          - type: org.apache.brooklyn.core.effector.ssh.SshCommandEffector
            brooklyn.config:
              name: "create-account"
              description: "Creates a seth account with a specific alias"
              parameters:
                alias:
                  description: "The account alias"
              command: |
                [ -f "data/${alias}.pem" ] && exit 1
                docker exec ${CONTAINER_NAME} \
                  bash -c "openssl ecparam -genkey -name secp256k1 | openssl ec -out ${alias}.pem" > /dev/null
                docker exec ${CONTAINER_NAME} \
                  seth account import ${alias}.pem ${alias} > /dev/null
                docker exec ${CONTAINER_NAME} \
                  seth account create --nonce=1 --wait ${alias}

    - id: sawtooth-seth-rpc
      description: |
        The Hyperledger Sawtooth 'seth' RPC service container.

        Enables Ethereum compatible applications to integrate with Sawtooth and
        create 'seth' transactions.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-seth-rpc"

        brooklyn.config:
          container.name:
            $brooklyn:formatString:
              - "seth-rpc-%s"
              - $brooklyn:attributeWhenReady("entity.id")
          image.name: "sawtooth-seth"
          image.version: $brooklyn:config("sawtooth.version")
          image.repository: $brooklyn:config("sawtooth.repository")

          shell.env:
            NODE: $brooklyn:config("sawtooth.node")
            VOLUMES_FROM:
              $brooklyn:formatString:
                - "--volumes-from %s"
                - $brooklyn:config("sawtooth.seth-tp")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 4004 \
                -p 3030:3030 \
                ${VOLUMES_FROM} \
                ${CONTAINER_OPTIONS} \
                ${IMAGE} \
                bash -c "\
                  [ -L ~root/.sawtooth ] || ln -s /data ~root/.sawtooth ; \
                  cd /data ; \
                  accounts=\$(ls *.pem | cut -d. -f1 | paste -d\  -s -)
                  /bin/seth-rpc \
                    -vv \
                    --bind 0.0.0.0:3030 \
                    --connect tcp://${NODE}.${NETWORK}:4004 \
                    --unlock \$accounts"

    - id: sawtooth-poet-validator-registry-tp
      description: |
        The Hyperledger Sawtooth PoET registry container.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-poet-validator-registry-tp"

        brooklyn.config:
          container.name:
            $brooklyn:formatString:
              - "poet-registry-%s"
              - $brooklyn:attributeWhenReady("entity.id")
          image.name: "sawtooth-poet-validator-registry-tp"
          image.version: $brooklyn:config("sawtooth.version")
          image.repository: $brooklyn:config("sawtooth.repository")

          shell.env:
            NODE: $brooklyn:config("sawtooth.node")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 4004 \
                ${CONTAINER_OPTIONS} \
                ${IMAGE} \
                poet-validator-registry-tp -v --connect tcp://${NODE}.${NETWORK}:4004

    - id: influxdb
      description: |
        The InfluxDB container.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "influxdb"

        brooklyn.config:
          container.name: "influxdb"
          image.name: "sawtooth-stats-influxdb"
          image.repository: $brooklyn:config("sawtooth.repository")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 8086:8086 \
                ${CONTAINER_OPTIONS} \
                ${IMAGE}

    - id: grafana
      description: |
        The Grafana container.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "grafana"

        brooklyn.config:
          container.name: "grafana"
          image.name: "sawtooth-stats-grafana"
          image.repository: $brooklyn:config("sawtooth.repository")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -p 3000:3000 \
                ${CONTAINER_OPTIONS} \
                ${IMAGE}

    - id: telegraf
      description: |
        The Telegraf container.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "telegraf"

        brooklyn.config:
          container.name: "telegraf"
          image.name: "telegraf"

          shell.env:
            INSTALL_DIR: $brooklyn:attributeWhenReady("install.dir")

          files.install:
            "classpath://io.brooklyn.hyperledger.sawtooth:sawtooth/telegraf.conf": telegraf.conf

          customize.command: |
            mkdir config
            mv ${INSTALL_DIR}/telegraf.conf config

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                --privileged \
                -e "NETWORK=${NETWORK}" \
                -e "DOCKER_HOST=${DOCKER_HOST}" \
                -v "$(pwd)/config:/config" \
                ${CONTAINER_OPTIONS} \
                ${IMAGE} \
                telegraf --config /config/telegraf.conf

    - id: sawtooth-smallbank-workload
      description: |
        The Hyperledger Sawtooth 'smallbank' workload generator container.
      itemType: entity
      item:
        type: sawtooth-docker-container
        name: "sawtooth-smallbank-workload"

        brooklyn.config:
          container.name: "smallbank-workload"
          image.name: "smallbank-workload"
          image.version: $brooklyn:config("sawtooth.version")
          image.repository: $brooklyn:config("sawtooth.repository")

          customise.command: |
            mkdir data

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -ti \
                -v "$(pwd)/data:/data" \
                ${CONTAINER_OPTIONS} \
                ${IMAGE} \
                bash

        brooklyn.initializers:
          - type: org.apache.brooklyn.core.effector.ssh.SshCommandEffector
            brooklyn.config:
              name: "create-transactions"
              description: "Creates batches of transactions for workload testing"
              parameters:
                key:
                  description: "The private key data to sign the transactions with"
                filename:
                  description: "The name of the transaction file to create"
                  defaultValue: "sawtooth"
                accounts:
                  description: "Number of accounts to create"
                  defaultValue: 100
                transactions:
                  description: "Number of transactions to create"
                  defaultValue: 50000
                batches:
                  description: "Number of transactions per batch"
                  defaultValue: 50
              command: |
                echo "${key}" | sudo tee -a data/${filename}.priv
                docker exec \
                    ${CONTAINER_NAME} \
                    /bin/create.sh \
                      /data/${filename}.priv \
                      ${filename} \
                      ${accounts} \
                      ${transactions} \
                      ${batches}
          - type: org.apache.brooklyn.core.effector.ssh.SshCommandEffector
            brooklyn.config:
              name: "submit-transactions"
              description: "Submit batches of generated transactions as workload testing"
              parameters:
                filename:
                  description: "The name of the transaction file to submit"
                  defaultValue: "sawtooth"
                endpoint:
                  description: "The REST API endpoint to use"
                rate:
                  description: "Rate of transactions per second"
                  defaultValue: 50
              command: |
                docker exec \
                    ${CONTAINER_NAME} \
                    /bin/submit.sh \
                      ${filename} \
                      ${endpoint} \
                      ${rate}
