brooklyn.catalog:
  version: "0.3.0-SNAPSHOT" # BROOKLYN_HYPERLEDGER_SAWTOOTH_VERSION
  publish:
    description: |
      Entities for OpenVPN client and server.
    license_code: APACHE-2.0
    icon_url: "classpath://io.brooklyn.hyperledger.sawtooth:icon/openvpn.png"

  items:
    - id: openvpn-server
      description: |
        OpenVPN Server.
      iconUrl: "classpath://io.brooklyn.hyperledger.sawtooth:icon/openvpn.png"
      itemtype: entity
      item:
        type: sawtooth-docker-container
        name: "openvpn-server"

        brooklyn.config:
          container.name: "openvpn-server"
          image.name: "openvpn"
          image.repository: "kylemanna"

          shell.env:
            OPENVPN_DATA: "openvpn-data"
            RUN_DIR: $brooklyn:attributeWhenReady("run.dir")
            SUBNET_CIDR: $brooklyn:config("sawtooth.network.cidr")
            HOST_ADDRESS: $brooklyn:parent().attributeWhenReady("host.address")

          install.command: |
            sudo apt-get install -y ipcalc

          customize.command: |
            SUBNET=$(echo -n ${SUBNET_CIDR} | cut -d/ -f1)
            NETMASK=$(ipcalc --nobinary ${SUBNET_CIDR} | grep Netmask | cut -d\  -f4)
            docker volume create --name ${OPENVPN_DATA}
            docker run \
                -v ${OPENVPN_DATA}:/etc/openvpn \
                --rm \
                ${IMAGE} \
                ovpn_genconfig \
                  -u udp://${HOST_ADDRESS} \
                  -N \
                  -m 1500 \
                  -d \
                  -r ${SUBNET_CIDR} \
                  -p "route ${SUBNET} ${NETMASK}"
            echo "duplicate-cn" | docker run \
                -v ${OPENVPN_DATA}:/etc/openvpn \
                --rm \
                -i \
                ${IMAGE} \
                tee -a openvpn.conf

            echo "${NETWORK}" | docker run \
                -v ${OPENVPN_DATA}:/etc/openvpn \
                --rm \
                -i \
                ${IMAGE} \
                ovpn_initpki nopass

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                --cap-add=NET_ADMIN \
                -v ${OPENVPN_DATA}:/etc/openvpn \
                -p 1194:1194/udp \
                ${IMAGE}

          post.launch.command: |
            docker run \
                -v ${OPENVPN_DATA}:/etc/openvpn \
                --rm \
                -i \
                ${IMAGE} \
                easyrsa build-client-full ${NETWORK} nopass
            docker run \
                -v ${OPENVPN_DATA}:/etc/openvpn \
                --rm \
                ${IMAGE} \
                ovpn_getclient ${NETWORK} > ${RUN_DIR}/${NETWORK}.ovpn

        brooklyn.initializers:
          - type: org.apache.brooklyn.core.sensor.ssh.SshCommandSensor
            brooklyn.config:
              name: openvpn.config
              description: |
                The OpenVPN Configuration File
              command: |
                cat ${RUN_DIR}/${NETWORK}.ovpn

    - id: openvpn-client
      description: |
        OpenVPN Client.
      iconUrl: "classpath://io.brooklyn.hyperledger.sawtooth:icon/openvpn.png"
      itemtype: entity
      item:
        type: sawtooth-docker-container
        name: "openvpn-client"

        brooklyn.config:
          container.name: "openvpn-client"
          image.name: "openvpn"
          image.repository: "kylemanna"

          shell.env:
            OPENVPN_CONFIG: $brooklyn:config("openvpn.config")
            OPENVPN_CLIENT: $brooklyn:config("openvpn.client")
            SUBNET_CIDR: $brooklyn:config("sawtooth.network.cidr")
            HOST_ADDRESS: $brooklyn:parent().attributeWhenReady("host.address")

          customize.command: |
            mkdir -p ${RUN_DIR}/openvpn
            cat <<EOF > ${RUN_DIR}/openvpn/${OPENVPN_CLIENT}.ovpn
            ${OPENVPN_CONFIG}
            EOF

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                --cap-add=NET_ADMIN \
                --device /dev/net/tun \
                -v ${RUN_DIR}/openvpn:/openvpn \
                -ti \
                ${IMAGE} \
                openvpn /openvpn/${OPENVPN_CLIENT}.ovpn

    - id: openvpn-router
      description: |
        OpenVPN Router.
      itemtype: entity
      item:
        type: sawtooth-docker-container
        name: "openvpn-router"

        brooklyn.config:
          container.name: "openvpn-router"
          image.name: "ubuntu"
          image.version: "xenial"

          shell.env:
            OPENVPN_CLIENT: $brooklyn:config("openvpn.client")
            REMOTE_SUBNET_CIDR: $brooklyn:config("openvpn.network.cidr")
            SUBNET_CIDR: $brooklyn:config("sawtooth.network.cidr")
            HOST_ADDRESS: $brooklyn:parent().attributeWhenReady("host.address")

          launch.command: |
            docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                --network ${NETWORK} \
                -d \
                -ti \
                --cap-add=NET_ADMIN \
                ${IMAGE}
                bash

          post.launch.command: |
            docker exec \
              -i \
              ${CONTAINER_NAME} \
              bash -c "\
                apt-get update -y && \
                apt-get install -y iproute iproute2 net-tools traceroute iputils-ping"
